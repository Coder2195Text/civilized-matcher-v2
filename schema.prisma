generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  enabled     Boolean @default(true)
  formVersion Int     @default(0)

  name               String  @db.VarChar(500)
  id                 String  @id
  discordTag         String  @unique
  age                Int
  preferredAges      Json
  gender             String
  preferredGenders   Json
  location           String  @db.VarChar(500)
  radius             Int
  desc               String  @db.VarChar(4000)
  matchDesc          String  @db.VarChar(4000)
  selfieURL          String? @db.VarChar(500)
  poly               String
  religion           String  @default("Christian")
  preferredReligions Json    @default("[\"Christian\"]")

  requests   DateRequests[] @relation("proposingTo")
  requesting DateRequests[] @relation("proposingFrom")
}

model Rejections {
  id            String       @id
  rejectedBy    Rejections[] @relation("UserReject")
  rejectedUsers Rejections[] @relation("UserReject")
}

model DateRequests {
  id String @id @default(cuid())

  proposingFrom User   @relation("proposingFrom", fields: [proposerId], references: [id], onDelete: Cascade)
  proposerId    String
  proposingTo   User   @relation("proposingTo", fields: [proposeeId], references: [id], onDelete: Cascade)
  proposeeId    String

  message    String  @db.VarChar(2000)
  status     Int     @default(0) // -1 = rejected, 0 = pending, 1 = accepted
  matchMaked Boolean @default(false)

  @@index([proposerId])
  @@index([proposeeId])
}

model Ranks {
  id   String @id
  rank String
}
